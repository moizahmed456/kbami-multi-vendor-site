<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2020-05-31 05:32:54              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer; use Exception; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Illuminate\Routing\Controller; class ActivateController extends Controller { public function activate() { if ($this->checkDatabaseConnection()) { goto wSMmx; } return redirect()->back()->withErrors(["\144\141\164\x61\142\141\x73\145\x5f\x63\157\x6e\x6e\145\143\164\x69\157\x6e" => trans("\151\x6e\163\164\141\154\x6c\145\x72\x5f\x6d\145\163\x73\x61\147\x65\x73\x2e\x65\156\166\x69\x72\x6f\x6e\155\145\x6e\x74\x2e\x77\x69\172\141\x72\x64\x2e\x66\157\162\x6d\56\x64\142\x5f\143\157\156\x6e\145\143\x74\151\157\156\x5f\x66\x61\x69\x6c\x65\x64")]); wSMmx: return view("\151\x6e\163\164\141\154\154\145\162\56\x61\x63\164\151\166\141\164\145"); } public function verify(Request $request) { $mysqli_connection = getMysqliConnection(); if ($mysqli_connection) { goto XgLe5; } return redirect()->route("\x49\x6e\x73\164\x61\x6c\x6c\x65\162\x2e\141\143\164\x69\x76\x61\x74\x65")->with(["\146\141\151\x6c\145\144" => trans("\162\145\163\x70\x6f\x6e\163\145\x73\x2e\x64\141\x74\141\142\x61\163\145\137\x63\x6f\x6e\156\145\143\164\151\157\156\137\146\x61\x69\154\145\144")])->withInput($request->all()); XgLe5: $purchase_verification = aplVerifyEnvatoPurchase($request->purchase_code); if (empty($purchase_verification)) { goto jnqcf; } return redirect()->route("\x49\156\163\164\141\x6c\x6c\145\x72\56\x61\x63\164\151\166\x61\164\145")->with(["\146\x61\151\x6c\145\144" => "\103\x6f\156\x6e\145\x63\164\x69\x6f\156\x20\164\157\40\x72\145\155\157\164\x65\x20\163\x65\x72\166\145\162\40\143\x61\156\47\x74\40\142\x65\40\x65\163\164\x61\x62\154\151\163\x68\x65\x64"])->withInput($request->all()); jnqcf: $license_notifications_array = incevioVerify($request->root_url, $request->email_address, $request->purchase_code, $mysqli_connection); if (!($license_notifications_array["\156\157\164\x69\146\151\143\x61\164\x69\x6f\x6e\137\143\x61\163\145"] == "\156\157\164\151\146\x69\x63\141\x74\x69\x6f\156\x5f\x6c\x69\143\x65\x6e\x73\x65\x5f\x6f\153")) { goto dNqkq; } return view("\151\x6e\x73\164\141\154\x6c\x65\x72\x2e\x69\x6e\163\164\141\154\x6c", compact("\x6c\151\x63\145\x6e\163\145\137\x6e\157\x74\151\x66\151\x63\x61\164\151\x6f\x6e\163\137\141\162\162\x61\x79")); dNqkq: if (!($license_notifications_array["\x6e\157\x74\151\x66\x69\x63\x61\x74\151\157\x6e\137\x63\x61\163\145"] == "\x6e\x6f\164\151\146\x69\x63\141\164\x69\157\156\x5f\141\x6c\162\x65\141\x64\x79\x5f\x69\x6e\x73\164\x61\154\154\x65\x64")) { goto oNoOR; } $license_notifications_array = incevioAutoloadHelpers($mysqli_connection, 1); if (!($license_notifications_array["\156\157\164\151\146\x69\x63\141\x74\x69\x6f\156\137\143\141\x73\145"] == "\156\x6f\x74\x69\x66\151\x63\x61\164\x69\157\156\137\x6c\x69\143\145\156\x73\x65\137\157\153")) { goto WpCAU; } return view("\151\x6e\x73\164\x61\x6c\x6c\x65\x72\56\x69\x6e\163\164\141\154\x6c", compact("\154\x69\x63\145\156\163\145\137\156\x6f\164\x69\146\151\143\141\x74\x69\x6f\156\x73\x5f\141\x72\162\x61\171")); WpCAU: oNoOR: return redirect()->route("\x49\156\163\164\141\154\x6c\x65\x72\x2e\141\x63\164\x69\x76\141\164\x65")->with(["\x66\x61\151\x6c\x65\144" => $license_notifications_array["\156\x6f\x74\151\x66\x69\x63\141\164\x69\157\x6e\x5f\164\x65\x78\x74"]])->withInput($request->all()); } private function checkDatabaseConnection() { try { DB::connection()->getPdo(); return true; } catch (Exception $e) { return false; } } private function response($message, $status = "\144\x61\x6e\x67\145\x72") { return ["\163\164\141\164\165\x73" => $status, "\155\x65\x73\x73\141\x67\145" => $message]; } }
